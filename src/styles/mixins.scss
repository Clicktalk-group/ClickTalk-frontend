// Centrage complet (horizontale/verticale)
@mixin flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

// Distribution entre éléments avec espace
@mixin flex-between {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

// Responsivité améliorée
@mixin responsive($breakpoint, $type: max) {
  @if $type == max {
    @media (max-width: $breakpoint) {
      @content;
    }
  } @else if $type == min {
    @media (min-width: $breakpoint) {
      @content;
    }
  }
}

// Gestion des ombres via niveaux
@mixin shadow($level: sm) {
  @if $level == sm {
    box-shadow: $shadow-sm;
  } @else if $level == md {
    box-shadow: $shadow-md;
  } @else if $level == lg {
    box-shadow: $shadow-lg;
  }
}

// Animation fluide : fade-in
@mixin fade-in($duration: 0.3s, $easing: ease-in-out) {
  animation: fadeIn $duration $easing;
  @keyframes fadeIn {
    from {
      opacity: 0;
      transform: translateY(10px); // Décalage visuel sur apparition
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
}

// Bouton générique (paramétrable pour la couleur)
@mixin button($bg-color: $primary-color, $text-color: $color-text-light, $hover-bg: $primary-hover) {
  display: inline-block;
  padding: $sp-sm $sp-md;
  font-size: $fs-sm;
  color: $text-color;
  background-color: $bg-color;
  border: none;
  border-radius: $radius-sm;
  cursor: pointer;
  transition: all 0.3s ease-in-out;

  &:hover {
    background-color: $hover-bg;
  }

  &:disabled {
    opacity: 0.6;
    cursor: not-allowed;
  }
}

// Divider générique (ligne fine pour séparateurs)
@mixin divider($color: $border-color, $opacity: 0.2) {
  border: 0;
  height: 1px;
  background-color: $color;
  opacity: $opacity;
}
